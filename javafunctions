package def;

import java.util.ArrayList;

import javax.ws.rs.core.MediaType;

import com.sun.jersey.api.client.Client;
import com.sun.jersey.api.client.ClientResponse;
import com.sun.jersey.api.client.WebResource;

/*import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONException;*/


import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

public class test {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		/*String SERVER_ROOT_URI="http://localhost:7474/db/data/";
		
		final String txUri = SERVER_ROOT_URI + "transaction/commit";
		WebResource resource = Client.create().resource( txUri );

		String query = "match (a) return a";
		
		String payload = "{\"statements\" : [ {\"statement\" : \"" +query + "\"} ]}";
		ClientResponse response = resource
		        .accept( MediaType.APPLICATION_JSON )
		        .type( MediaType.APPLICATION_JSON )
		        .entity( payload )
		        .post( ClientResponse.class );

		String result = response.getEntity(String.class);
		
		System.out.println( String.format(
		        "POST [%s] to [%s], status code [%d], returned data: "
		                + System.getProperty( "line.separator" ) + "%s",
		        payload, txUri, response.getStatus(),
		        result ) );

		System.out.println(result);
		
		JSONObject jsonObject = JSONObject.fromObject(result);
		String str = jsonObject.getString("results");
		System.out.println(str);*/
		ArrayList l = GetInNeighbors(0);
		for(int i = 0;i<l.size();i++)
		{
			String str = String.valueOf(l.get(i));
			System.out.println(str);
		}
	}
	
	public static String GetNode(int id)
	{
		String SERVER_ROOT_URI="http://localhost:7474/db/data/";
		
		final String txUri = SERVER_ROOT_URI + "transaction/commit";
		WebResource resource = Client.create().resource( txUri );

		String query = "match (a) where id(a) = " +Integer.toString(id) +" return a";
		
		String payload = "{\"statements\" : [ {\"statement\" : \"" +query + "\"} ]}";
		ClientResponse response = resource
		        .accept( MediaType.APPLICATION_JSON )
		        .type( MediaType.APPLICATION_JSON )
		        .entity( payload )
		        .post( ClientResponse.class );

		String result = response.getEntity(String.class);
		JSONObject jsonObject = JSONObject.fromObject(result);
		String str = jsonObject.getString("results");
		return str;
	}
	
	public static ArrayList<Integer> GetOutNeighbors(int id)
	{
		String SERVER_ROOT_URI="http://localhost:7474/db/data/";
		
		final String txUri = SERVER_ROOT_URI + "transaction/commit";
		WebResource resource = Client.create().resource( txUri );

		String query = "match (a)-[]->(b) where id(a) = " +Integer.toString(id) +" return id(b)";
		
		String payload = "{\"statements\" : [ {\"statement\" : \"" +query + "\"} ]}";
		ClientResponse response = resource
		        .accept( MediaType.APPLICATION_JSON )
		        .type( MediaType.APPLICATION_JSON )
		        .entity( payload )
		        .post( ClientResponse.class );

		String result = response.getEntity(String.class);
		JSONObject jsonObject = JSONObject.fromObject(result);
		String str = jsonObject.getString("results");
		System.out.println(str);
		str = str.substring(1, str.length()-1);
		System.out.println(str);
		jsonObject = JSONObject.fromObject(str);
		System.out.println(str);
		str = jsonObject.getString("data");
		System.out.println(str);
		
		JSONArray arr = JSONArray.fromObject(str);
		ArrayList l  = new ArrayList<Integer>();
		
		for(int i = 0;i<arr.size();i++)
		{
			jsonObject=arr.getJSONObject(i);
			str = jsonObject.getString("row");
			System.out.println(str);
			str = str.substring(1, str.length()-1);
			l.add(Integer.parseInt(str));
		}
		return l;
	}
	
	public static ArrayList<Integer> GetInNeighbors(int id)
	{
		String SERVER_ROOT_URI="http://localhost:7474/db/data/";
		
		final String txUri = SERVER_ROOT_URI + "transaction/commit";
		WebResource resource = Client.create().resource( txUri );

		String query = "match (a)-[]->(b) where id(b) = " +Integer.toString(id) +" return id(a)";
		
		String payload = "{\"statements\" : [ {\"statement\" : \"" +query + "\"} ]}";
		ClientResponse response = resource
		        .accept( MediaType.APPLICATION_JSON )
		        .type( MediaType.APPLICATION_JSON )
		        .entity( payload )
		        .post( ClientResponse.class );

		String result = response.getEntity(String.class);
		JSONObject jsonObject = JSONObject.fromObject(result);
		String str = jsonObject.getString("results");
		System.out.println(str);
		str = str.substring(1, str.length()-1);
		System.out.println(str);
		jsonObject = JSONObject.fromObject(str);
		System.out.println(str);
		str = jsonObject.getString("data");
		System.out.println(str);
		
		JSONArray arr = JSONArray.fromObject(str);
		ArrayList l  = new ArrayList<Integer>();
		
		for(int i = 0;i<arr.size();i++)
		{
			jsonObject=arr.getJSONObject(i);
			str = jsonObject.getString("row");
			System.out.println(str);
			str = str.substring(1, str.length()-1);
			l.add(Integer.parseInt(str));
		}
		return l;
	}
	
}
